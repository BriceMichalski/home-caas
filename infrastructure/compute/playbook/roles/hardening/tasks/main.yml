---
#######################
#        USER         #
#######################

- name: Manage Users
  include_tasks: users.yml
  with_dict: "{{ server_users }}"
  loop_control:
    loop_var: user
  when:
    - server_users is defined
  tags:
    - hardening
    - hardening::users

#######################
#      TIMEZONE       #
#######################

- name: Set timezone to Europe/Paris
  become: true
  timezone:
    name: Europe/Paris
  tags:
    - hardening
    - hardening::timezone

#######################
#         APT         #
#######################
- name: Apt operation
  become: true
  block:
    - name: Run the equivalent of "apt-get update" as a separate step
      apt:
        update_cache: yes

    - name: Upgrade packet (apt-get full-upgrade)
      apt:
        upgrade: full

    - name: Remove useless packages from the cache
      apt:
        autoclean: yes

    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes
  tags:
    - never
    - hardening
    - hardening::upgrade

#######################
#        DISKS        #
#######################

- name: Manage Partitions
  include_tasks: partition.yml
  loop: "{{ partitions }}"
  loop_control:
    loop_var: partition
  tags:
    - hardening
    - hardening::partition

#######################
#         SWAP        #
#######################
- name: Disbale swap
  become: true
  block:
    - name: Find swap file
      command: "grep swap /etc/fstab"
      register: swap_result
      changed_when: false
      failed_when: swap_result.rc == 2

    - name: Check if swap was found
      set_fact:
        swap_file: "{{ swap_result.stdout.split('\t') | first }}"

    - debug:
        var: swap_file

    - name: Disable swap
      command: swapoff -a
      when: swap_file != ""

    - name: Remove swapfile from /etc/fstab
      lineinfile:
        path: /etc/fstab
        state: absent
        regexp: "^{{ swap_file }}"
      when: swap_file != ""

    - name: Ensure swap file doesn't exist.
      file:
        path: "{{ swap_file }}"
        state: absent
      when: swap_file != ""
  tags:
    - hardening
    - hardening::swap

#######################
#     Usual tips      #
#######################

- name: Install usual package
  become: true
  block:
    - name: Install usual apt package
      apt:
        name: "{{ item }}"
        state: present
      with_items: "{{ usual_apt_package }}"

    - name: Install usual python package
      pip:
        name: "{{ item }}"
        state: present
        executable: pip3
      with_items: "{{ usual_pip_package }}"
  tags:
    - hardening
    - hardening::usual

#######################
#     Storage Req     #
#######################

- name: NFS requierements
  become: true
  block:
    - name: Install nfs-common
      ansible.builtin.apt:
        name: nfs-common
        state: present
  tags:
    - hardening
    - hardening::storage-req
    - hardening::storage-req::nfs

- name: ISCSI requierements
  become: true
  block:
    - name: Install iscsi apt package
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      with_items:
        - "open-iscsi"
        - "lsscsi"
        - "sg3-utils"
        - "multipath-tools"
        - "scsitools"

    - name: Multipath config
      ansible.builtin.template:
        src: multipath.conf.j2
        dest: /etc/multipath.conf
      notify: restart multipath-tools

    - name: Enable and restart multipath-tools service
      ansible.builtin.systemd:
        name: multipath-tools.service
        enabled: yes
        state: started

    - name: Enable and start open-iscsi service
      ansible.builtin.systemd:
        name: open-iscsi.service
        enabled: yes
        state: started
  tags:
    - hardening
    - hardening::storage-req
    - hardening::storage-req::iscsi
