---

namespaceOverride: "{{ kube_core_namespace }}"

persistence:
    defaultClassReplicaCount: 1
default-replica-count: 1
csi:
    attacherReplicaCount: 1
    provisionerReplicaCount: 1
    resizerReplicaCount: 1
    snapshotterReplicaCount: 1

defaultSettings:
  backupTarget: ~
  backupTargetCredentialSecret: ~
  allowRecurringJobWhileVolumeDetached: ~
  createDefaultDiskLabeledNodes: ~
  defaultDataPath: /data/longhorn

ingress:
  ## Set to true to enable ingress record generation
  enabled: true

  ## Add ingressClassName to the Ingress
  ## Can replace the kubernetes.io/ingress.class annotation on v1.18+
  ingressClassName: ""

  host: "{{ longhorn_domain_name }}"

  ## Set this to true in order to enable TLS on the ingress record
  ## A side effect of this will be that the backend service will be connected at port 443
  tls: true

  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret: "{{ longhorn_domain_name }}-tls"

  ## Ingress annotations done as key:value pairs
  ## If you're using kube-lego, you will want to add:
  ## kubernetes.io/tls-acme: true
  ##
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/annotations.md
  ##
  ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: "{{ 'admin' | to_traefik_middleware }}"
    external-dns.alpha.kubernetes.io/target: "{{ cloudflare_record_target }}"
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
